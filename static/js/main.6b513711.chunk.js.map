{"version":3,"sources":["utils/helpers.js","constants/constants.js","сomponents/AddTaskModal/AddTaskModal.tsx","сomponents/CheckoutTable/CheckoutTable.tsx","сomponents/GetTotalModal/GetTotalModal.tsx","img/card-text.svg","сomponents/ToDoCard/ToDoCard.tsx","img/play-fill.svg","img/pause-fill.svg","сomponents/Stopwatch/Stopwatch.tsx","сomponents/InProgressCard/InProgressCard.tsx","сomponents/DoneCard/DoneCard.tsx","сomponents/CommonButton/CommonButton.tsx","сomponents/Kanban/Kanban.tsx","App.js","reportWebVitals.js","index.js"],"names":["formatDate","date","moment","locale","format","formatSumm","timer","toFixed","toString","replace","formatTime","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","AddTaskModal","props","useState","value","setValue","id","setId","show","modalType","useEffect","uuidv4","Modal","className","onHide","centered","autoFocus","Header","closeButton","Title","Body","Form","autoComplete","Group","controlId","Control","type","placeholder","onChange","e","target","Button","variant","onClick","preventDefault","Date","addTask","text","handleClick","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","useAsyncDebounce","undefined","style","fontSize","border","CheckoutTable","loading","setLoading","columns","data","useTable","useFilters","useGlobalFilter","getTableProps","headerGroups","rows","prepareRow","footerGroups","state","visibleColumns","a","getPdf","input","document","getElementById","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","imgProps","getImageProperties","width","internal","pageSize","getWidth","height","addImage","save","finally","striped","bordered","hover","size","colSpan","length","textAlign","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","group","getFooterGroupProps","getFooterProps","GetTotalModal","useMemo","closedTasks","accessor","Footer","info","total","React","reduce","sum","values","summ","fontWeight","ToDoCard","Card","src","cardIco","alt","todo","startTask","Stopwatch","increment","useRef","isPaused","current","setInterval","setTimer","clearInterval","localStorage","setItem","JSON","stringify","handleTimer","setIsPaused","window","onbeforeunload","playIco","pauseIco","InProgressCard","timerData","getItem","task","resolveTask","DoneCard","CommonButton","xmlns","fill","viewBox","stroke","strokeWidth","d","Kanban","tasksData","tasks","parse","inProgress","done","closed","setTasks","setModalType","addTodo","deleteTodo","newTodos","filter","deleteInProgress","newInProgress","addInProgress","addDone","removeItem","getTotal","todoCards","inProgressCards","doneCards","handleCloseModal","CardColumns","bg","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.6b513711.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport { RATE } from \"../constants/constants\";\r\n\r\n//Форматер даты\r\nexport const formatDate = (date) => {\r\n  moment.locale(\"ru\");\r\n  return moment(date).format('L, h:mm:ss');\r\n};\r\n\r\n//Форматер суммы\r\nexport const formatSumm = (timer) => {\r\n  const summ = timer * (RATE / 3600);\r\n  const reg = ` рублей `;\r\n  return summ.toFixed(2).toString().replace(/[,.]/g, reg);\r\n};\r\n\r\nexport const reformatSumm = (rub) => {\r\n  const timer = rub.slice(0, -7).replace(/( рублей )/g, \".\");\r\n  const total =  +timer / (RATE / 3600);\r\n  return total;\r\n};\r\n\r\n//Форматер таймера\r\nexport const formatTime = (timer) => {\r\n  const getSeconds = `0${timer % 60}`.slice(-2);\r\n  const minutes = `${Math.floor(timer / 60)}`;\r\n  const getMinutes = `0${+minutes % 60}`.slice(-2);\r\n  const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\r\n\r\n  return `${getHours} : ${getMinutes} : ${getSeconds}`;\r\n};\r\n","export const RATE = 1000;","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport { formatDate } from \"../../utils/helpers\";\r\nimport { ModalType } from \"../../utils/types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./AddTaskModal.scss\";\r\n\r\nfunction AddTaskModal(props: {\r\n  onHide: () => void;\r\n  id: number;\r\n  addTask: (data: { text: string; id: string; date: string }) => void;\r\n  modalType: ModalType;\r\n  }) {\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const [id, setId] = useState<string>(\"\");\r\n  const show = props.modalType === \"add\" ? true : false\r\n\r\n  useEffect(() => {\r\n    setId(uuidv4());\r\n  }, [value]);\r\n\r\n  //Оброботка сабмита\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    const date = new Date();\r\n    props.addTask({ text: value, id: id, date: formatDate(date) });\r\n    props.onHide();\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"AddTaskModal\"\r\n      show={show}\r\n      onHide={props.onHide}\r\n      centered={true}\r\n      autoFocus={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>What's your new task?</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Form className=\"AddTaskModal__form d-flex\" autoComplete=\"off\">\r\n          <Form.Group className=\"AddTaskModal__form-content\" controlId=\"form\">\r\n            <Form.Control className=\"AddTaskModal__input\"\r\n              type=\"text\"\r\n              placeholder=\"Type your task here\"\r\n\r\n              value={value}\r\n              onChange={(e: { target: { value: string } }) =>\r\n                setValue(e.target.value)\r\n              }\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            className=\"AddTaskModal__button\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={(e: React.MouseEvent) => handleClick(e)}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddTaskModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport {\r\n  useTable,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n} from \"react-table\";\r\n\r\nimport { Task } from \"../../utils/types\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nimport \"./CheckoutTable.scss\";\r\n\r\n  //Фильтрация данных в таблице\r\n  function GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }: {\r\n    preGlobalFilteredRows: any;\r\n    globalFilter: any;\r\n    setGlobalFilter: any;\r\n  }) {\r\n    const [value, setValue] = useState(globalFilter);\r\n    const onChange = useAsyncDebounce((value) => {\r\n      setGlobalFilter(value || undefined);\r\n    }, 500);\r\n\r\n    return (\r\n      <span>\r\n        Filter:{\" \"}\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder={\"Input something here...\"}\r\n          style={{\r\n            fontSize: \"1 rem\",\r\n            border: \"0\",\r\n          }}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n\r\nfunction CheckoutTable(props: {\r\n  data: Task[];\r\n  columns: any;\r\n  onHide: () => void;\r\n}) {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const columns = props.columns;\r\n  const data = props.data;\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    footerGroups,\r\n    state,\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters, // useFilters!\r\n    useGlobalFilter // useGlobalFilter!\r\n  );\r\n\r\n  //Оброботка сабмита\r\n  const handleClick = async (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    await getPdf();\r\n  };\r\n\r\n  //Сохранение таблицы в pdf\r\n  const getPdf = () => {\r\n    setLoading(true);\r\n    const input = document.getElementById(\"table\") as HTMLCanvasElement;\r\n    html2canvas(input)\r\n      .then((canvas) => {\r\n        const imgData = canvas.toDataURL(\"image/png\");\r\n        const pdf = new jsPDF(\"p\", \"px\", \"a4\");\r\n        const imgProps = pdf.getImageProperties(imgData);\r\n        let width = pdf.internal.pageSize.getWidth() - 40;\r\n        let height = (imgProps.height * width) / imgProps.width;\r\n        pdf.addImage(imgData, \"JPEG\", 20, 20, width, height);\r\n        pdf.save(\"total.pdf\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        props.onHide();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BTable\r\n        className=\"CheckoutTable\"\r\n        striped\r\n        bordered\r\n        hover\r\n        size=\"xl\"\r\n        {...getTableProps()}\r\n        id=\"table\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              colSpan={visibleColumns.length}\r\n              style={{\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={state.globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n              />\r\n            </th>\r\n          </tr>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td\r\n                      className=\"CheckoutTable__column\"\r\n                      {...cell.getCellProps()}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map((group) => (\r\n            <tr {...group.getFooterGroupProps()}>\r\n              {group.headers.map((column) => (\r\n                <td {...column.getFooterProps()}>{column.render(\"Footer\")}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </BTable>\r\n\r\n      <Button\r\n        className=\"GetTotalModal__button\"\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n        onClick={(e: React.MouseEvent) => handleClick(e)}\r\n      >\r\n        {loading === true ? \"Loading...\" : \"Save to PDF\"}\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CheckoutTable;\r\n","import React, { useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalType, Task } from \"../../utils/types\";\r\nimport { formatSumm, reformatSumm } from \"../../utils/helpers\";\r\nimport CheckoutTable from \"../CheckoutTable/CheckoutTable\";\r\nimport \"./GetTotalModal.scss\";\r\n\r\nfunction GetTotalModal(props: {\r\n  onHide: () => void;\r\n  modalType: ModalType;\r\n  closedTasks: Task[];\r\n}) {\r\n  const show = props.modalType === \"total\" ? true : false;\r\n\r\n  //Подготовка данных для таблицы\r\n  const data = useMemo(() => props.closedTasks, [props.closedTasks]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Task\",\r\n        accessor: \"text\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Timer\",\r\n        accessor: \"timer\",\r\n      },\r\n      {\r\n        Header: \"Summ\",\r\n        accessor: \"summ\",\r\n        Footer: (info: any) => {\r\n          // Only calculate total visits if rows change\r\n          const total = React.useMemo(\r\n            () =>\r\n              info.rows.reduce((sum: number, row: any) => {\r\n                return reformatSumm(row.values.summ) + sum;\r\n              }, 0),\r\n            [info.rows]\r\n          );\r\n\r\n          return (\r\n            <>\r\n              {\" \"}\r\n              <span style={{ fontWeight: \"bolder\" }}>Total:</span>{\" \"}\r\n              {`${formatSumm(total)} копеек`}\r\n            </>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"date\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      className=\"GetTotalModal\"\r\n      show={show}\r\n      onHide={props.onHide}\r\n      centered={true}\r\n      autoFocus={false}\r\n      size=\"xl\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Sic transit gloria mundi</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body className=\"GetTotalModal__content\">\r\n        <CheckoutTable data={data} columns={columns} onHide={props.onHide} />\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default GetTotalModal;\r\n","export default __webpack_public_path__ + \"static/media/card-text.21416c42.svg\";","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport cardIco from \"../../img/card-text.svg\";\r\nimport { formatDate } from \"../../utils/helpers\";\r\nimport \"./ToDoCard.scss\";\r\n\r\nfunction ToDoCard(props: {\r\n  todo: string;\r\n  id: string;\r\n  startTask: (data: { text: string; id: string; date: string }) => void;\r\n}) {\r\n\r\n  //Принять таск\r\n  const handleStart = () => {\r\n    const date = new Date();\r\n    props.startTask({ text: props.todo, id: props.id, date: formatDate(date)});\r\n  };\r\n\r\n  return (\r\n    <Card className=\"ToDoCard\" id={\"\" + props.id}>\r\n      <Card.Body className=\"ToDoCard__content d-flex p-2\">\r\n        <div className=\"ToDoCard__text-wrap d-flex\">\r\n          <img\r\n            className=\"ToDoCard__content-image mr-2\"\r\n            src={cardIco}\r\n            alt=\"card icon\"\r\n          />\r\n          <Card.Title className=\"ToDoCard__text text-secondary\">\r\n            {props.todo}\r\n          </Card.Title>\r\n        </div>\r\n        <Button\r\n          className=\"ToDoCard__button mr-3 mb-2\"\r\n          size=\"lg\"\r\n          id={\"\" + props.id}\r\n          onClick={handleStart}\r\n        >\r\n          Start\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ToDoCard;\r\n","export default __webpack_public_path__ + \"static/media/play-fill.446d2092.svg\";","export default __webpack_public_path__ + \"static/media/pause-fill.bba9440f.svg\";","import { useRef, useEffect } from \"react\";\r\nimport playIco from \"../../img/play-fill.svg\";\r\nimport pauseIco from \"../../img/pause-fill.svg\";\r\nimport { formatTime } from \"../../utils/helpers\";\r\nimport \"./Stopwatch.scss\";\r\n\r\nconst Stopwatch = (props: {\r\n  id: string;\r\n  isPaused: boolean;\r\n  setIsPaused: (isPaused: boolean) => void;\r\n  timer: number;\r\n  setTimer: (timer: any) => void;\r\n}) => {\r\n  const increment: any = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n    if (props.isPaused === false) {\r\n      increment.current = setInterval(() => {\r\n        props.setTimer((timer: any) => timer + 1);\r\n      }, 1000);\r\n    } else  {\r\n\r\n      clearInterval(increment.current);\r\n\r\n      localStorage.setItem(`timer${props.id}`, JSON.stringify(props.timer));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [props.isPaused]);\r\n\r\n  //Запуск и остановка таймера\r\n  const handleTimer = () => {\r\n    props.setIsPaused(!props.isPaused);\r\n  };\r\n\r\n  //Сохранение данных таймера при закрытии или обновлении страницы\r\n  window.onbeforeunload = function (e: any) {\r\n    localStorage.setItem(`timer${props.id}`, JSON.stringify(props.timer));\r\n  };\r\n\r\n  return (\r\n    <div className=\"Stopwatch\">\r\n      <div className=\"Stopwatch__content\">\r\n        <p className=\"Stopwatch__time\">{formatTime(props.timer)}</p>\r\n        <div className=\"buttons\">\r\n          {props.isPaused ? (\r\n            <img\r\n              className=\"Stopwatch__image\"\r\n              src={playIco}\r\n              alt=\"play ico\"\r\n              onClick={handleTimer}\r\n            />\r\n          ) : (\r\n            <img\r\n              className=\"Stopwatch__image\"\r\n              src={pauseIco}\r\n              alt=\"pause ico\"\r\n              onClick={handleTimer}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport Stopwatch from \"../Stopwatch/Stopwatch\";\r\nimport cardIco from \"../../img/card-text.svg\";\r\nimport { formatDate, formatSumm, formatTime } from \"../../utils/helpers\";\r\nimport \"./InProgressCard.scss\";\r\n\r\nfunction InProgressCard(props: {\r\n  task: string;\r\n  id: string;\r\n  resolveTask: (data: {\r\n    text: string;\r\n    id: string;\r\n    date: string;\r\n    timer: string;\r\n    summ: string;\r\n  }) => void;\r\n}) {\r\n  const timerData: string = localStorage.getItem(`timer${props.id}`)\r\n    ? localStorage.getItem(`timer${props.id}`) || \"\"\r\n    : \"\";\r\n\r\n  const [timer, setTimer] = useState(+timerData);\r\n\r\n  const [isPaused, setIsPaused] = useState(true);\r\n\r\n  //Завершить таск\r\n  const handleResolve = () => {\r\n    const date = new Date();\r\n    props.resolveTask({\r\n      text: props.task,\r\n      id: props.id,\r\n      date: formatDate(date),\r\n      timer: formatTime(timer),\r\n      summ: `${formatSumm(timer)} копеек`,\r\n    });\r\n    setIsPaused(true);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"InProgressCard\">\r\n      <Card.Body className=\"InProgressCard__content d-flex p-2\">\r\n        <div className=\"d-flex\">\r\n          <img\r\n            className=\"InProgressCard__content-image mr-2\"\r\n            src={cardIco}\r\n            alt=\"card icon\"\r\n          />\r\n\r\n          <Card.Title className=\"InProgressCard__text text-secondary\">\r\n            {props.task}\r\n          </Card.Title>\r\n        </div>\r\n\r\n        <div className=\"InProgressCard__controls d-flex\">\r\n          <Stopwatch\r\n            id={props.id}\r\n            isPaused={isPaused}\r\n            setIsPaused={setIsPaused}\r\n            timer={timer}\r\n            setTimer={setTimer}\r\n          />\r\n          <Button\r\n            variant=\"success\"\r\n            className=\"InProgressCard__button\"\r\n            size=\"lg\"\r\n            onClick={handleResolve}\r\n          >\r\n            Resolve\r\n          </Button>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InProgressCard;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport cardIco from \"../../img/card-text.svg\";\r\nimport \"./DoneCard.scss\";\r\n\r\nfunction DoneCard(props: { task: string; id: string; timer?: string; summ?: string }) {\r\n  return (\r\n    <Card className=\"DoneCard\">\r\n      <Card.Body className=\"DoneCard__content d-flex p-2\">\r\n        <div className=\"d-flex\">\r\n          <img\r\n            className=\"DoneCard__content-image mr-2\"\r\n            src={cardIco}\r\n            alt=\"card icon\"\r\n          />\r\n\r\n          <Card.Title className=\"DoneCard__text text-secondary\">\r\n            {props.task}\r\n          </Card.Title>\r\n        </div>\r\n        <div className=\"DoneCard__container d-flex\">\r\n          <div>\r\n            <p className=\"DoneCard__time\">{props.timer}</p>\r\n            <span className=\"DoneCard__summ\">\r\n              {`${props.summ}`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DoneCard;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./CommonButton.scss\";\r\n\r\nfunction CommonButton(props: { onClick: () => void; text: string}) {\r\n  return (\r\n    <Button\r\n      className=\"CommonButton\"\r\n      variant=\"outline-secondary\"\r\n      style={{ fontWeight: \"bolder\" }}\r\n      onClick={props.onClick}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        fill=\"currentColor\"\r\n        className=\"CommonButton__image bi bi-plus\"\r\n        viewBox=\"0 0 16 16\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n      </svg>\r\n      {props.text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default CommonButton;\r\n","import React, { useState } from \"react\";\r\nimport { CardColumns, Card } from \"react-bootstrap\";\r\nimport AddTaskModal from \"../AddTaskModal/AddTaskModal\";\r\nimport GetTotalModal from \"../GetTotalModal/GetTotalModal\";\r\nimport ToDoCard from \"../ToDoCard/ToDoCard\";\r\nimport InProgressCard from \"../InProgressCard/InProgressCard\";\r\nimport DoneCard from \"../DoneCard/DoneCard\";\r\nimport CommonButton from \"../CommonButton/CommonButton\";\r\nimport { Task, TasksDataType, ModalType } from \"../../utils/types\";\r\nimport \"./Kanban.scss\";\r\n// Importing the Bootstrap CSS\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction Kanban() {\r\n  const tasksData: TasksDataType = {\r\n    tasks: localStorage.getItem(\"tasks\")\r\n      ? JSON.parse(localStorage.getItem(\"tasks\") || \"\")\r\n      : [],\r\n    inProgress: localStorage.getItem(\"inProgress\")\r\n      ? JSON.parse(localStorage.getItem(\"inProgress\") || \"\")\r\n      : [],\r\n    done: localStorage.getItem(\"done\")\r\n      ? JSON.parse(localStorage.getItem(\"done\") || \"\")\r\n      : [],\r\n    closed: localStorage.getItem(\"closed\")\r\n      ? JSON.parse(localStorage.getItem(\"closed\") || \"\")\r\n      : [],\r\n  };\r\n\r\n  const [tasks, setTasks] = useState<TasksDataType>(tasksData);\r\n  const [modalType, setModalType] = useState<ModalType>();\r\n\r\n  //Добавление таска\r\n  const addTodo = async (data: Task) => {\r\n    await localStorage.setItem(\"tasks\", JSON.stringify([...tasks.tasks, data]));\r\n\r\n    setTasks({\r\n      ...tasksData,\r\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\r\n    });\r\n  };\r\n\r\n  //Удаление таска\r\n  const deleteTodo = async (id: string) => {\r\n    const newTodos = tasks.tasks.filter(\r\n      (todo: { id: string }) => todo.id !== id\r\n    );\r\n    await localStorage.setItem(\"tasks\", JSON.stringify(newTodos));\r\n\r\n    setTasks({\r\n      ...tasksData,\r\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\r\n    });\r\n  };\r\n\r\n  const deleteInProgress = async (id: string) => {\r\n    const newInProgress = tasks.inProgress.filter(\r\n      (task: { text: string; id: string }) => task.id !== id\r\n    );\r\n    await localStorage.setItem(\"inProgress\", JSON.stringify(newInProgress));\r\n\r\n    setTasks({\r\n      ...tasksData,\r\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\r\n    });\r\n  };\r\n\r\n  //Добавляем таски в inProgress\r\n  const addInProgress = async (data: Task) => {\r\n    deleteTodo(data.id);\r\n    await localStorage.setItem(\r\n      \"inProgress\",\r\n      JSON.stringify([...tasks.inProgress, data])\r\n    );\r\n\r\n    setTasks({\r\n      ...tasksData,\r\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\r\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\r\n    });\r\n  };\r\n\r\n  //Добавляем таски в done\r\n  const addDone = async (data: Task) => {\r\n    deleteInProgress(data.id);\r\n    await localStorage.setItem(\"done\", JSON.stringify([...tasks.done, data]));\r\n\r\n    setTasks({\r\n      ...tasksData,\r\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\r\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\r\n      done: JSON.parse(localStorage.getItem(\"done\") || \"\"),\r\n    });\r\n    localStorage.removeItem(`timer${data.id}`);\r\n  };\r\n\r\n  const getTotal = async () => {\r\n    await localStorage.setItem(\r\n      \"closed\",\r\n      JSON.stringify([...tasks.closed, ...tasks.done])\r\n    );\r\n    localStorage.removeItem(\"done\");\r\n    setTasks({\r\n      ...tasksData,\r\n      done: [],\r\n      closed: JSON.parse(localStorage.getItem(\"closed\") || \"\"),\r\n    });\r\n  };\r\n\r\n  //Собираем таски\r\n  const todoCards =\r\n    tasks.tasks &&\r\n    tasks.tasks.map((todo: Task) => {\r\n      return (\r\n        <ToDoCard\r\n          todo={todo.text}\r\n          id={todo.id}\r\n          key={todo.id}\r\n          startTask={addInProgress}\r\n        />\r\n      );\r\n    });\r\n\r\n  const inProgressCards =\r\n    tasks.inProgress &&\r\n    tasks.inProgress.map((task: Task) => {\r\n      return (\r\n        <InProgressCard\r\n          task={task.text}\r\n          id={task.id}\r\n          key={task.id}\r\n          resolveTask={addDone}\r\n        />\r\n      );\r\n    });\r\n\r\n  const doneCards =\r\n    tasks.done &&\r\n    tasks.done.map((task: Task) => {\r\n      return (\r\n        <DoneCard\r\n          task={task.text}\r\n          id={task.id}\r\n          timer={task.timer}\r\n          summ={task.summ}\r\n          key={task.id}\r\n        />\r\n      );\r\n    });\r\n\r\n  //Обработчики\r\n  const handleOpenModal = () => {\r\n    setModalType(\"total\");\r\n    getTotal();\r\n  };\r\n  const handleCloseModal = () => {\r\n    setModalType(undefined);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Kanban\">\r\n      <AddTaskModal\r\n        onHide={handleCloseModal}\r\n        id={1}\r\n        addTask={addTodo}\r\n        modalType={modalType}\r\n      />\r\n\r\n      <GetTotalModal\r\n        onHide={handleCloseModal}\r\n        modalType={modalType}\r\n        closedTasks={tasks.closed}\r\n      />\r\n\r\n      <CardColumns className=\"Kanban__content p-3 d-flex\">\r\n        <Card className=\"Kanban__column\" bg=\"light\">\r\n          <Card.Body className=\"Kanban__column-content p-2 mb-3\">\r\n            <div className=\"Kanban__column-header d-flex\">\r\n              <span className=\"Kanban__counter\">\r\n                {tasks.tasks && tasks.tasks.length}\r\n              </span>\r\n              <Card.Title className=\"Kanban__content-title\">To do</Card.Title>\r\n            </div>\r\n\r\n            {todoCards}\r\n          </Card.Body>\r\n          <footer className=\"Kanban__column-footer\">\r\n            <CommonButton onClick={() => setModalType(\"add\")} text=\"New Task\" />\r\n          </footer>\r\n        </Card>\r\n\r\n        <Card className=\"Kanban__column\" bg=\"light\">\r\n          <Card.Body\r\n            className=\"Kanban__column-content p-2\"\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <div className=\"Kanban__column-header d-flex\">\r\n              <span className=\"Kanban__counter\">\r\n                {tasks.inProgress && tasks.inProgress.length}\r\n              </span>\r\n              <Card.Title className=\"Kanban__content-title\">\r\n                In progress\r\n              </Card.Title>\r\n            </div>\r\n            {inProgressCards}\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card className=\"Kanban__column\" bg=\"light\">\r\n          <Card.Body className=\"Kanban__column-content p-2 mb-3\">\r\n            <div className=\"Kanban__column-header d-flex\">\r\n              <span className=\"Kanban__counter\">\r\n                {tasks.done && tasks.done.length}\r\n              </span>\r\n              <Card.Title className=\"Kanban__content-title\">Done</Card.Title>\r\n            </div>\r\n            {doneCards}\r\n          </Card.Body>\r\n          <footer className=\"Kanban__column-footer\">\r\n            <CommonButton onClick={handleOpenModal} text=\"Get total\" />\r\n          </footer>\r\n        </Card>\r\n      </CardColumns>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Kanban;\r\n","import \"./App.css\";\nimport Kanban from \"./сomponents/Kanban/Kanban\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Kanban/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}