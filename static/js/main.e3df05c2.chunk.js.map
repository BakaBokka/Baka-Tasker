{"version":3,"sources":["utils/helpers.js","constants/constants.js","сomponents/AddTaskModal/AddTaskModal.tsx","сomponents/CheckoutTable/CheckoutTable.tsx","сomponents/CheckoutModal/CheckoutModal.tsx","img/card-text.svg","сomponents/ToDoCard/ToDoCard.tsx","img/play-fill.svg","img/pause-fill.svg","сomponents/Stopwatch/Stopwatch.tsx","сomponents/InProgressCard/InProgressCard.tsx","сomponents/DoneCard/DoneCard.tsx","сomponents/CommonButton/CommonButton.tsx","сomponents/Kanban/Kanban.tsx","App.js","reportWebVitals.js","index.js"],"names":["formatDate","date","moment","locale","format","formatSumm","timer","toFixed","toString","replace","reformatSumm","rub","slice","formatTime","getSeconds","minutes","Math","floor","getMinutes","getHours","AddTaskModal","props","useState","value","setValue","id","setId","show","modalType","useEffect","uuidv4","Modal","className","onHide","centered","autoFocus","Header","closeButton","Title","Body","Form","autoComplete","Group","controlId","Control","type","placeholder","onChange","e","target","Button","variant","onClick","preventDefault","Date","addTask","text","handleClick","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","useAsyncDebounce","undefined","style","fontSize","border","CheckoutTable","columns","data","useTable","useFilters","useGlobalFilter","getTableProps","headerGroups","rows","prepareRow","footerGroups","state","visibleColumns","striped","bordered","hover","size","colSpan","length","textAlign","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","group","getFooterGroupProps","getFooterProps","CheckoutModal","useMemo","closedTasks","accessor","Footer","info","total","React","reduce","sum","console","log","values","summ","fontWeight","ToDoCard","Card","src","cardIco","alt","todo","startTask","Stopwatch","increment","useRef","isPaused","current","setInterval","setTimer","clearInterval","localStorage","setItem","JSON","stringify","handleTimer","setIsPaused","window","onbeforeunload","playIco","pauseIco","InProgressCard","timerData","getItem","task","resolveTask","DoneCard","CommonButton","xmlns","width","height","fill","viewBox","stroke","strokeWidth","d","Kanban","tasksData","tasks","parse","inProgress","done","closed","setTasks","setModalType","addTodo","a","deleteTodo","newTodos","filter","deleteInProgress","newInProgress","addInProgress","addDone","removeItem","checkout","todoCards","inProgressCards","doneCards","handleCloseModal","CardColumns","bg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e3df05c2.chunk.js","sourcesContent":["import moment from \"moment\";\nimport \"moment/locale/ru\";\nimport { RATE } from \"../constants/constants\";\n\n//Форматер даты\nexport const formatDate = (date) => {\n  moment.locale(\"ru\");\n  return moment(date).format('L, h:mm:ss');\n};\n\n//Форматер суммы\nexport const formatSumm = (timer) => {\n  const summ = timer * (RATE / 3600);\n  const reg = ` рублей `;\n  return summ.toFixed(2).toString().replace(/[,.]/g, reg);\n};\n\nexport const reformatSumm = (rub) => {\n  const timer = rub.slice(0, -7).replace(/( рублей )/g, \".\");\n  const total =  +timer / (RATE / 3600);\n  return total;\n};\n\n//Форматер таймера\nexport const formatTime = (timer) => {\n  const getSeconds = `0${timer % 60}`.slice(-2);\n  const minutes = `${Math.floor(timer / 60)}`;\n  const getMinutes = `0${+minutes % 60}`.slice(-2);\n  const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\n\n  return `${getHours} : ${getMinutes} : ${getSeconds}`;\n};\n","export const RATE = 1000;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { formatDate } from \"../../utils/helpers\";\nimport { ModalType } from \"../../utils/types\";\nimport { v4 as uuidv4 } from 'uuid';\nimport \"./AddTaskModal.scss\";\n\nfunction AddTaskModal(props: {\n  onHide: () => void;\n  id: number;\n  addTask: (data: { text: string; id: string; date: string }) => void;\n  modalType: ModalType;\n  }) {\n  const [value, setValue] = useState<string>(\"\");\n  const [id, setId] = useState<string>(\"\");\n  const show = props.modalType === \"add\" ? true : false\n\n  useEffect(() => {\n    setId(uuidv4());\n  }, [value]);\n\n  //Оброботка сабмита\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    const date = new Date();\n    props.addTask({ text: value, id: id, date: formatDate(date) });\n    props.onHide();\n    setValue(\"\");\n  };\n\n  return (\n    <Modal\n      className=\"AddTaskModal\"\n      show={show}\n      onHide={props.onHide}\n      centered={true}\n      autoFocus={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>What's your new task?</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form className=\"AddTaskModal__form d-flex\" autoComplete=\"off\">\n          <Form.Group className=\"AddTaskModal__form-content\" controlId=\"form\">\n            <Form.Control className=\"AddTaskModal__input\"\n              type=\"text\"\n              placeholder=\"Type your task here\"\n\n              value={value}\n              onChange={(e: { target: { value: string } }) =>\n                setValue(e.target.value)\n              }\n            />\n          </Form.Group>\n\n          <Button\n            className=\"AddTaskModal__button\"\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={(e: React.MouseEvent) => handleClick(e)}\n          >\n            Add\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default AddTaskModal;\n","import React, { useState } from \"react\";\nimport BTable from \"react-bootstrap/Table\";\nimport {\n  useTable,\n  useFilters,\n  useGlobalFilter,\n  useAsyncDebounce,\n} from \"react-table\";\n\nimport { Task } from \"../../utils/types\";\nimport \"./CheckoutTable.scss\";\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}: {\n  preGlobalFilteredRows: any;\n  globalFilter: any;\n  setGlobalFilter: any;\n}) {\n  const [value, setValue] = useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <span>\n      Filter:{\" \"}\n      <input\n        value={value || \"\"}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        placeholder={\"Input something here...\"}\n        style={{\n          fontSize: \"1 rem\",\n          border: \"0\",\n        }}\n      />\n    </span>\n  );\n}\n\nfunction CheckoutTable(props: { data: Task[]; columns: any }) {\n  const columns = props.columns;\n  const data = props.data;\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    footerGroups,\n    state,\n    visibleColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useFilters, // useFilters!\n    useGlobalFilter // useGlobalFilter!\n  );\n\n  return (\n    <BTable className=\"CheckoutTable\" striped bordered hover size=\"xl\" {...getTableProps()}>\n      <thead>\n        <tr>\n          <th\n            colSpan={visibleColumns.length}\n            style={{\n              textAlign: \"left\",\n            }}\n          >\n            <GlobalFilter\n              preGlobalFilteredRows={preGlobalFilteredRows}\n              globalFilter={state.globalFilter}\n              setGlobalFilter={setGlobalFilter}\n            />\n          </th>\n        </tr>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td className=\"CheckoutTable__column\" {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n      <tfoot>\n        {footerGroups.map((group) => (\n          <tr {...group.getFooterGroupProps()}>\n            {group.headers.map((column) => (\n              <td {...column.getFooterProps()}>{column.render(\"Footer\")}</td>\n            ))}\n          </tr>\n        ))}\n      </tfoot>\n    </BTable>\n  );\n}\n\nexport default CheckoutTable;\n","import React, { useMemo } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { ModalType, Task } from \"../../utils/types\";\nimport { formatSumm, reformatSumm } from \"../../utils/helpers\";\nimport CheckoutTable from \"../CheckoutTable/CheckoutTable\";\nimport \"./CheckoutModal.scss\";\n\nfunction CheckoutModal(props: {\n  onHide: () => void;\n  modalType: ModalType;\n  closedTasks: Task[];\n}) {\n  const show = props.modalType === \"checkout\" ? true : false;\n\n  //Оброботка сабмита\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.onHide();\n  };\n\n  //Подготовка данных для таблицы\n  const data = useMemo(() => props.closedTasks, [props.closedTasks]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Task\",\n        accessor: \"text\", // accessor is the \"key\" in the data\n      },\n      {\n        Header: \"Timer\",\n        accessor: \"timer\",\n      },\n      {\n        Header: \"Summ\",\n        accessor: \"summ\",\n        Footer: (info: any) => {\n          // Only calculate total visits if rows change\n          const total = React.useMemo(\n            () =>\n              info.rows.reduce(\n                (sum: number, row: any) => {\n                  console.log(reformatSumm(row.values.summ));\n                 return reformatSumm(row.values.summ) + sum},\n                0\n              ),\n            [info.rows]\n          );\n\n          return <> <span style={{ fontWeight: \"bolder\"}}>Total:</span>  {`${formatSumm(total)} копеек`}</>;\n        },\n      },\n      {\n        Header: \"Date\",\n        accessor: \"date\",\n      },\n    ],\n    []\n  );\n\n  return (\n    <Modal\n      className=\"CheckoutModal\"\n      show={show}\n      onHide={props.onHide}\n      centered={true}\n      autoFocus={false}\n      size=\"xl\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Sic transit gloria mundi.</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body  className=\"CheckoutModal__content\">\n        <CheckoutTable data={data} columns={columns} />\n        <Button\n          className=\"CheckoutModal__button\"\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={(e: React.MouseEvent) => handleClick(e)}\n        >\n          There will be save button\n        </Button>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default CheckoutModal;\n","export default __webpack_public_path__ + \"static/media/card-text.21416c42.svg\";","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport cardIco from \"../../img/card-text.svg\";\nimport { formatDate } from \"../../utils/helpers\";\nimport \"./ToDoCard.scss\";\n\nfunction ToDoCard(props: {\n  todo: string;\n  id: string;\n  startTask: (data: { text: string; id: string; date: string }) => void;\n}) {\n\n  //Принять таск\n  const handleStart = () => {\n    const date = new Date();\n    props.startTask({ text: props.todo, id: props.id, date: formatDate(date)});\n  };\n\n  return (\n    <Card className=\"ToDoCard\" id={\"\" + props.id}>\n      <Card.Body className=\"ToDoCard__content d-flex p-2\">\n        <div className=\"ToDoCard__text-wrap d-flex\">\n          <img\n            className=\"ToDoCard__content-image mr-2\"\n            src={cardIco}\n            alt=\"card icon\"\n          />\n          <Card.Title className=\"ToDoCard__text text-secondary\">\n            {props.todo}\n          </Card.Title>\n        </div>\n        <Button\n          className=\"ToDoCard__button mr-3 mb-2\"\n          size=\"lg\"\n          id={\"\" + props.id}\n          onClick={handleStart}\n        >\n          Start\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ToDoCard;\n","export default __webpack_public_path__ + \"static/media/play-fill.446d2092.svg\";","export default __webpack_public_path__ + \"static/media/pause-fill.bba9440f.svg\";","import { useRef, useEffect } from \"react\";\nimport playIco from \"../../img/play-fill.svg\";\nimport pauseIco from \"../../img/pause-fill.svg\";\nimport { formatTime } from \"../../utils/helpers\";\nimport \"./Stopwatch.scss\";\n\nconst Stopwatch = (props: {\n  id: string;\n  isPaused: boolean;\n  setIsPaused: (isPaused: boolean) => void;\n  timer: number;\n  setTimer: (timer: any) => void;\n}) => {\n  const increment: any = useRef();\n\n  useEffect(() => {\n\n    if (props.isPaused === false) {\n      increment.current = setInterval(() => {\n        props.setTimer((timer: any) => timer + 1);\n      }, 1000);\n    } else  {\n\n      clearInterval(increment.current);\n\n      localStorage.setItem(`timer${props.id}`, JSON.stringify(props.timer));\n    }\n    // eslint-disable-next-line\n  }, [props.isPaused]);\n\n  //Запуск и остановка таймера\n  const handleTimer = () => {\n    props.setIsPaused(!props.isPaused);\n  };\n\n  //Сохранение данных таймера при закрытии или обновлении страницы\n  window.onbeforeunload = function (e: any) {\n    localStorage.setItem(`timer${props.id}`, JSON.stringify(props.timer));\n  };\n\n  return (\n    <div className=\"Stopwatch\">\n      <div className=\"Stopwatch__content\">\n        <p className=\"Stopwatch__time\">{formatTime(props.timer)}</p>\n        <div className=\"buttons\">\n          {props.isPaused ? (\n            <img\n              className=\"Stopwatch__image\"\n              src={playIco}\n              alt=\"play ico\"\n              onClick={handleTimer}\n            />\n          ) : (\n            <img\n              className=\"Stopwatch__image\"\n              src={pauseIco}\n              alt=\"pause ico\"\n              onClick={handleTimer}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Stopwatch;\n","import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport Stopwatch from \"../Stopwatch/Stopwatch\";\nimport cardIco from \"../../img/card-text.svg\";\nimport { formatDate, formatSumm, formatTime } from \"../../utils/helpers\";\nimport \"./InProgressCard.scss\";\n\nfunction InProgressCard(props: {\n  task: string;\n  id: string;\n  resolveTask: (data: {\n    text: string;\n    id: string;\n    date: string;\n    timer: string;\n    summ: string;\n  }) => void;\n}) {\n  const timerData: string = localStorage.getItem(`timer${props.id}`)\n    ? localStorage.getItem(`timer${props.id}`) || \"\"\n    : \"\";\n\n  const [timer, setTimer] = useState(+timerData);\n\n  const [isPaused, setIsPaused] = useState(true);\n\n  //Завершить таск\n  const handleResolve = () => {\n    const date = new Date();\n    props.resolveTask({\n      text: props.task,\n      id: props.id,\n      date: formatDate(date),\n      timer: formatTime(timer),\n      summ: `${formatSumm(timer)} копеек`,\n    });\n    setIsPaused(true);\n  };\n\n  return (\n    <Card className=\"InProgressCard\">\n      <Card.Body className=\"InProgressCard__content d-flex p-2\">\n        <div className=\"d-flex\">\n          <img\n            className=\"InProgressCard__content-image mr-2\"\n            src={cardIco}\n            alt=\"card icon\"\n          />\n\n          <Card.Title className=\"InProgressCard__text text-secondary\">\n            {props.task}\n          </Card.Title>\n        </div>\n\n        <div className=\"InProgressCard__controls d-flex\">\n          <Stopwatch\n            id={props.id}\n            isPaused={isPaused}\n            setIsPaused={setIsPaused}\n            timer={timer}\n            setTimer={setTimer}\n          />\n          <Button\n            variant=\"success\"\n            className=\"InProgressCard__button\"\n            size=\"lg\"\n            onClick={handleResolve}\n          >\n            Resolve\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default InProgressCard;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport cardIco from \"../../img/card-text.svg\";\nimport \"./DoneCard.scss\";\n\nfunction DoneCard(props: { task: string; id: string; timer?: string; summ?: string }) {\n  return (\n    <Card className=\"DoneCard\">\n      <Card.Body className=\"DoneCard__content d-flex p-2\">\n        <div className=\"d-flex\">\n          <img\n            className=\"DoneCard__content-image mr-2\"\n            src={cardIco}\n            alt=\"card icon\"\n          />\n\n          <Card.Title className=\"DoneCard__text text-secondary\">\n            {props.task}\n          </Card.Title>\n        </div>\n        <div className=\"DoneCard__container d-flex\">\n          <div>\n            <p className=\"DoneCard__time\">{props.timer}</p>\n            <span className=\"DoneCard__summ\">\n              {`${props.summ}`}\n            </span>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default DoneCard;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./CommonButton.scss\";\n\nfunction CommonButton(props: { onClick: () => void; text: string}) {\n  return (\n    <Button\n      className=\"CommonButton\"\n      variant=\"outline-secondary\"\n      style={{ fontWeight: \"bolder\" }}\n      onClick={props.onClick}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        fill=\"currentColor\"\n        className=\"CommonButton__image bi bi-plus\"\n        viewBox=\"0 0 16 16\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n      >\n        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n      </svg>\n      {props.text}\n    </Button>\n  );\n}\n\nexport default CommonButton;\n","import React, { useState } from \"react\";\nimport { CardColumns, Card } from \"react-bootstrap\";\nimport AddTaskModal from \"../AddTaskModal/AddTaskModal\";\nimport CheckoutModal from \"../CheckoutModal/CheckoutModal\";\nimport ToDoCard from \"../ToDoCard/ToDoCard\";\nimport InProgressCard from \"../InProgressCard/InProgressCard\";\nimport DoneCard from \"../DoneCard/DoneCard\";\nimport CommonButton from \"../CommonButton/CommonButton\";\nimport { Task, TasksDataType, ModalType } from \"../../utils/types\";\nimport \"./Kanban.scss\";\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Kanban() {\n  const tasksData: TasksDataType = {\n    tasks: localStorage.getItem(\"tasks\")\n      ? JSON.parse(localStorage.getItem(\"tasks\") || \"\")\n      : [],\n    inProgress: localStorage.getItem(\"inProgress\")\n      ? JSON.parse(localStorage.getItem(\"inProgress\") || \"\")\n      : [],\n    done: localStorage.getItem(\"done\")\n      ? JSON.parse(localStorage.getItem(\"done\") || \"\")\n      : [],\n    closed: localStorage.getItem(\"closed\")\n      ? JSON.parse(localStorage.getItem(\"closed\") || \"\")\n      : [],\n  };\n\n  const [tasks, setTasks] = useState<TasksDataType>(tasksData);\n  const [modalType, setModalType] = useState<ModalType>();\n\n  //Добавление таска\n  const addTodo = async (data: Task) => {\n    await localStorage.setItem(\"tasks\", JSON.stringify([...tasks.tasks, data]));\n\n    setTasks({\n      ...tasksData,\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\n    });\n  };\n\n  //Удаление таска\n  const deleteTodo = async (id: string) => {\n    const newTodos = tasks.tasks.filter(\n      (todo: { id: string }) => todo.id !== id\n    );\n    await localStorage.setItem(\"tasks\", JSON.stringify(newTodos));\n\n    setTasks({\n      ...tasksData,\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\n    });\n  };\n\n  const deleteInProgress = async (id: string) => {\n    const newInProgress = tasks.inProgress.filter(\n      (task: { text: string; id: string }) => task.id !== id\n    );\n    await localStorage.setItem(\"inProgress\", JSON.stringify(newInProgress));\n\n    setTasks({\n      ...tasksData,\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\n    });\n  };\n\n  //Добавляем таски в inProgress\n  const addInProgress = async (data: Task) => {\n    deleteTodo(data.id);\n    await localStorage.setItem(\n      \"inProgress\",\n      JSON.stringify([...tasks.inProgress, data])\n    );\n\n    setTasks({\n      ...tasksData,\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\n    });\n  };\n\n  //Добавляем таски в done\n  const addDone = async (data: Task) => {\n    deleteInProgress(data.id);\n    await localStorage.setItem(\"done\", JSON.stringify([...tasks.done, data]));\n\n    setTasks({\n      ...tasksData,\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\n      done: JSON.parse(localStorage.getItem(\"done\") || \"\"),\n    });\n    localStorage.removeItem(`timer${data.id}`);\n  };\n\n  const checkout = async () => {\n    await localStorage.setItem(\n      \"closed\",\n      JSON.stringify([...tasks.closed, ...tasks.done])\n    );\n    localStorage.removeItem(\"done\");\n    setTasks({\n      ...tasksData,\n      done: [],\n      closed: JSON.parse(localStorage.getItem(\"closed\") || \"\"),\n    });\n  };\n\n  //Собираем таски\n  const todoCards =\n    tasks.tasks &&\n    tasks.tasks.map((todo: Task) => {\n      return (\n        <ToDoCard\n          todo={todo.text}\n          id={todo.id}\n          key={todo.id}\n          startTask={addInProgress}\n        />\n      );\n    });\n\n  const inProgressCards =\n    tasks.inProgress &&\n    tasks.inProgress.map((task: Task) => {\n      return (\n        <InProgressCard\n          task={task.text}\n          id={task.id}\n          key={task.id}\n          resolveTask={addDone}\n        />\n      );\n    });\n\n  const doneCards =\n    tasks.done &&\n    tasks.done.map((task: Task) => {\n      return (\n        <DoneCard\n          task={task.text}\n          id={task.id}\n          timer={task.timer}\n          summ={task.summ}\n          key={task.id}\n        />\n      );\n    });\n\n  //Обработчики\n  const handleOpenModal = () => {\n    setModalType(\"checkout\");\n    checkout();\n  };\n  const handleCloseModal = () => {\n    setModalType(undefined);\n  };\n\n  return (\n    <div className=\"Kanban\">\n      <AddTaskModal\n        onHide={handleCloseModal}\n        id={1}\n        addTask={addTodo}\n        modalType={modalType}\n      />\n\n      <CheckoutModal\n        onHide={handleCloseModal}\n        modalType={modalType}\n        closedTasks={tasks.closed}\n      />\n\n      <CardColumns className=\"Kanban__content p-3 d-flex\">\n        <Card className=\"Kanban__column\" bg=\"light\">\n          <Card.Body className=\"Kanban__column-content p-2 mb-3\">\n            <div className=\"Kanban__column-header d-flex\">\n              <span className=\"Kanban__counter\">\n                {tasks.tasks && tasks.tasks.length}\n              </span>\n              <Card.Title className=\"Kanban__content-title\">To do</Card.Title>\n            </div>\n\n            {todoCards}\n          </Card.Body>\n          <footer className=\"Kanban__column-footer\">\n            <CommonButton onClick={() => setModalType(\"add\")} text=\"New Task\" />\n          </footer>\n        </Card>\n\n        <Card className=\"Kanban__column\" bg=\"light\">\n          <Card.Body\n            className=\"Kanban__column-content p-2\"\n            style={{ height: \"100%\" }}\n          >\n            <div className=\"Kanban__column-header d-flex\">\n              <span className=\"Kanban__counter\">\n                {tasks.inProgress && tasks.inProgress.length}\n              </span>\n              <Card.Title className=\"Kanban__content-title\">\n                In progress\n              </Card.Title>\n            </div>\n            {inProgressCards}\n          </Card.Body>\n        </Card>\n\n        <Card className=\"Kanban__column\" bg=\"light\">\n          <Card.Body className=\"Kanban__column-content p-2 mb-3\">\n            <div className=\"Kanban__column-header d-flex\">\n              <span className=\"Kanban__counter\">\n                {tasks.done && tasks.done.length}\n              </span>\n              <Card.Title className=\"Kanban__content-title\">Done</Card.Title>\n            </div>\n            {doneCards}\n          </Card.Body>\n          <footer className=\"Kanban__column-footer\">\n            <CommonButton onClick={handleOpenModal} text=\"Checkout\" />\n          </footer>\n        </Card>\n      </CardColumns>\n    </div>\n  );\n}\n\nexport default Kanban;\n","import \"./App.css\";\nimport Kanban from \"./сomponents/Kanban/Kanban\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Kanban/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}