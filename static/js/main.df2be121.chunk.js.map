{"version":3,"sources":["utils/helpers.js","constants/constants.js","сomponents/AddTaskModal/AddTaskModal.tsx","сomponents/CheckoutTable/CheckoutTable.tsx","сomponents/GetTotalModal/GetTotalModal.tsx","img/card-text.svg","сomponents/ToDoCard/ToDoCard.tsx","img/play-fill.svg","img/pause-fill.svg","сomponents/Stopwatch/Stopwatch.tsx","сomponents/InProgressCard/InProgressCard.tsx","сomponents/DoneCard/DoneCard.tsx","сomponents/CommonButton/CommonButton.tsx","сomponents/Kanban/Kanban.tsx","App.js","reportWebVitals.js","index.js"],"names":["formatDate","date","moment","locale","format","formatSumm","timer","toFixed","toString","replace","formatTime","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","AddTaskModal","props","useState","value","setValue","id","setId","show","modalType","useEffect","uuidv4","Modal","className","onHide","centered","autoFocus","Header","closeButton","Title","Body","Form","autoComplete","Group","controlId","Control","type","placeholder","onChange","e","target","Button","variant","onClick","preventDefault","Date","addTask","text","handleClick","CheckoutTable","columns","data","useTable","useFilters","useGlobalFilter","getTableProps","headerGroups","rows","prepareRow","footerGroups","state","visibleColumns","preGlobalFilteredRows","setGlobalFilter","GlobalFilter","globalFilter","useAsyncDebounce","undefined","style","fontSize","border","getPdf","input","document","getElementById","console","log","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","imgProps","getImageProperties","width","internal","pageSize","getWidth","height","addImage","save","striped","bordered","hover","size","colSpan","length","textAlign","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","group","getFooterGroupProps","getFooterProps","GetTotalModal","useMemo","closedTasks","accessor","Footer","info","total","React","reduce","sum","values","summ","fontWeight","ToDoCard","Card","src","cardIco","alt","todo","startTask","Stopwatch","increment","useRef","isPaused","current","setInterval","setTimer","clearInterval","localStorage","setItem","JSON","stringify","handleTimer","setIsPaused","window","onbeforeunload","playIco","pauseIco","InProgressCard","timerData","getItem","task","resolveTask","DoneCard","CommonButton","xmlns","fill","viewBox","stroke","strokeWidth","d","Kanban","tasksData","tasks","parse","inProgress","done","closed","setTasks","setModalType","addTodo","a","deleteTodo","newTodos","filter","deleteInProgress","newInProgress","addInProgress","addDone","removeItem","getTotal","todoCards","inProgressCards","doneCards","handleCloseModal","CardColumns","bg","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.df2be121.chunk.js","sourcesContent":["import moment from \"moment\";\nimport \"moment/locale/ru\";\nimport { RATE } from \"../constants/constants\";\n\n//Форматер даты\nexport const formatDate = (date) => {\n  moment.locale(\"ru\");\n  return moment(date).format('L, h:mm:ss');\n};\n\n//Форматер суммы\nexport const formatSumm = (timer) => {\n  const summ = timer * (RATE / 3600);\n  const reg = ` рублей `;\n  return summ.toFixed(2).toString().replace(/[,.]/g, reg);\n};\n\nexport const reformatSumm = (rub) => {\n  const timer = rub.slice(0, -7).replace(/( рублей )/g, \".\");\n  const total =  +timer / (RATE / 3600);\n  return total;\n};\n\n//Форматер таймера\nexport const formatTime = (timer) => {\n  const getSeconds = `0${timer % 60}`.slice(-2);\n  const minutes = `${Math.floor(timer / 60)}`;\n  const getMinutes = `0${+minutes % 60}`.slice(-2);\n  const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\n\n  return `${getHours} : ${getMinutes} : ${getSeconds}`;\n};\n","export const RATE = 1000;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { formatDate } from \"../../utils/helpers\";\nimport { ModalType } from \"../../utils/types\";\nimport { v4 as uuidv4 } from 'uuid';\nimport \"./AddTaskModal.scss\";\n\nfunction AddTaskModal(props: {\n  onHide: () => void;\n  id: number;\n  addTask: (data: { text: string; id: string; date: string }) => void;\n  modalType: ModalType;\n  }) {\n  const [value, setValue] = useState<string>(\"\");\n  const [id, setId] = useState<string>(\"\");\n  const show = props.modalType === \"add\" ? true : false\n\n  useEffect(() => {\n    setId(uuidv4());\n  }, [value]);\n\n  //Оброботка сабмита\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    const date = new Date();\n    props.addTask({ text: value, id: id, date: formatDate(date) });\n    props.onHide();\n    setValue(\"\");\n  };\n\n  return (\n    <Modal\n      className=\"AddTaskModal\"\n      show={show}\n      onHide={props.onHide}\n      centered={true}\n      autoFocus={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>What's your new task?</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form className=\"AddTaskModal__form d-flex\" autoComplete=\"off\">\n          <Form.Group className=\"AddTaskModal__form-content\" controlId=\"form\">\n            <Form.Control className=\"AddTaskModal__input\"\n              type=\"text\"\n              placeholder=\"Type your task here\"\n\n              value={value}\n              onChange={(e: { target: { value: string } }) =>\n                setValue(e.target.value)\n              }\n            />\n          </Form.Group>\n\n          <Button\n            className=\"AddTaskModal__button\"\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={(e: React.MouseEvent) => handleClick(e)}\n          >\n            Add\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default AddTaskModal;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport BTable from \"react-bootstrap/Table\";\nimport {\n  useTable,\n  useFilters,\n  useGlobalFilter,\n  useAsyncDebounce,\n} from \"react-table\";\n\nimport { Task } from \"../../utils/types\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\nimport \"./CheckoutTable.scss\";\n\nfunction CheckoutTable(props: {\n  data: Task[];\n  columns: any;\n  onHide: () => void;\n}) {\n  const columns = props.columns;\n  const data = props.data;\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    footerGroups,\n    state,\n    visibleColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useFilters, // useFilters!\n    useGlobalFilter // useGlobalFilter!\n  );\n\n  //Фильтрация данных в таблице\n  function GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }: {\n    preGlobalFilteredRows: any;\n    globalFilter: any;\n    setGlobalFilter: any;\n  }) {\n    const [value, setValue] = useState(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n      setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n      <span>\n        Filter:{\" \"}\n        <input\n          value={value || \"\"}\n          onChange={(e) => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder={\"Input something here...\"}\n          style={{\n            fontSize: \"1 rem\",\n            border: \"0\",\n          }}\n        />\n      </span>\n    );\n  }\n  //Оброботка сабмита\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    getPdf();\n    props.onHide();\n  };\n\n  //Сохранение таблицы в pdf\n  const getPdf = () => {\n    const input = document.getElementById(\"table\") as HTMLCanvasElement;\n    console.log(input);\n\n    html2canvas(input).then((canvas) => {\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF(\"p\", \"px\", \"a4\");\n      const imgProps = pdf.getImageProperties(imgData);\n      let width = pdf.internal.pageSize.getWidth() - 40;\n      let height = (imgProps.height * width) / imgProps.width;\n\n      pdf.addImage(imgData, \"JPEG\", 20, 20, width, height);\n      pdf.save(\"total.pdf\");\n    });\n  };\n\n  return (\n    <>\n      <BTable\n        className=\"CheckoutTable\"\n        striped\n        bordered\n        hover\n        size=\"xl\"\n        {...getTableProps()}\n        id=\"table\"\n      >\n        <thead>\n          <tr>\n            <th\n              colSpan={visibleColumns.length}\n              style={{\n                textAlign: \"left\",\n              }}\n            >\n              <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n            </th>\n          </tr>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td\n                      className=\"CheckoutTable__column\"\n                      {...cell.getCellProps()}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          {footerGroups.map((group) => (\n            <tr {...group.getFooterGroupProps()}>\n              {group.headers.map((column) => (\n                <td {...column.getFooterProps()}>{column.render(\"Footer\")}</td>\n              ))}\n            </tr>\n          ))}\n        </tfoot>\n      </BTable>\n\n      <Button\n        className=\"GetTotalModal__button\"\n        variant=\"primary\"\n        type=\"submit\"\n        onClick={(e: React.MouseEvent) => handleClick(e)}\n      >\n        Save to PDF\n      </Button>\n    </>\n  );\n}\n\nexport default CheckoutTable;\n","import React, { useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalType, Task } from \"../../utils/types\";\nimport { formatSumm, reformatSumm } from \"../../utils/helpers\";\nimport CheckoutTable from \"../CheckoutTable/CheckoutTable\";\nimport \"./GetTotalModal.scss\";\n\nfunction GetTotalModal(props: {\n  onHide: () => void;\n  modalType: ModalType;\n  closedTasks: Task[];\n}) {\n  const show = props.modalType === \"total\" ? true : false;\n\n  //Подготовка данных для таблицы\n  const data = useMemo(() => props.closedTasks, [props.closedTasks]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Task\",\n        accessor: \"text\", // accessor is the \"key\" in the data\n      },\n      {\n        Header: \"Timer\",\n        accessor: \"timer\",\n      },\n      {\n        Header: \"Summ\",\n        accessor: \"summ\",\n        Footer: (info: any) => {\n          // Only calculate total visits if rows change\n          const total = React.useMemo(\n            () =>\n              info.rows.reduce((sum: number, row: any) => {\n                return reformatSumm(row.values.summ) + sum;\n              }, 0),\n            [info.rows]\n          );\n\n          return (\n            <>\n              {\" \"}\n              <span style={{ fontWeight: \"bolder\" }}>Total:</span>{\" \"}\n              {`${formatSumm(total)} копеек`}\n            </>\n          );\n        },\n      },\n      {\n        Header: \"Date\",\n        accessor: \"date\",\n      },\n    ],\n    []\n  );\n\n  return (\n    <Modal\n      className=\"GetTotalModal\"\n      show={show}\n      onHide={props.onHide}\n      centered={true}\n      autoFocus={false}\n      size=\"xl\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Sic transit gloria mundi</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body className=\"GetTotalModal__content\">\n        <CheckoutTable data={data} columns={columns} onHide={props.onHide} />\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GetTotalModal;\n","export default __webpack_public_path__ + \"static/media/card-text.21416c42.svg\";","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport cardIco from \"../../img/card-text.svg\";\nimport { formatDate } from \"../../utils/helpers\";\nimport \"./ToDoCard.scss\";\n\nfunction ToDoCard(props: {\n  todo: string;\n  id: string;\n  startTask: (data: { text: string; id: string; date: string }) => void;\n}) {\n\n  //Принять таск\n  const handleStart = () => {\n    const date = new Date();\n    props.startTask({ text: props.todo, id: props.id, date: formatDate(date)});\n  };\n\n  return (\n    <Card className=\"ToDoCard\" id={\"\" + props.id}>\n      <Card.Body className=\"ToDoCard__content d-flex p-2\">\n        <div className=\"ToDoCard__text-wrap d-flex\">\n          <img\n            className=\"ToDoCard__content-image mr-2\"\n            src={cardIco}\n            alt=\"card icon\"\n          />\n          <Card.Title className=\"ToDoCard__text text-secondary\">\n            {props.todo}\n          </Card.Title>\n        </div>\n        <Button\n          className=\"ToDoCard__button mr-3 mb-2\"\n          size=\"lg\"\n          id={\"\" + props.id}\n          onClick={handleStart}\n        >\n          Start\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ToDoCard;\n","export default __webpack_public_path__ + \"static/media/play-fill.446d2092.svg\";","export default __webpack_public_path__ + \"static/media/pause-fill.bba9440f.svg\";","import { useRef, useEffect } from \"react\";\nimport playIco from \"../../img/play-fill.svg\";\nimport pauseIco from \"../../img/pause-fill.svg\";\nimport { formatTime } from \"../../utils/helpers\";\nimport \"./Stopwatch.scss\";\n\nconst Stopwatch = (props: {\n  id: string;\n  isPaused: boolean;\n  setIsPaused: (isPaused: boolean) => void;\n  timer: number;\n  setTimer: (timer: any) => void;\n}) => {\n  const increment: any = useRef();\n\n  useEffect(() => {\n\n    if (props.isPaused === false) {\n      increment.current = setInterval(() => {\n        props.setTimer((timer: any) => timer + 1);\n      }, 1000);\n    } else  {\n\n      clearInterval(increment.current);\n\n      localStorage.setItem(`timer${props.id}`, JSON.stringify(props.timer));\n    }\n    // eslint-disable-next-line\n  }, [props.isPaused]);\n\n  //Запуск и остановка таймера\n  const handleTimer = () => {\n    props.setIsPaused(!props.isPaused);\n  };\n\n  //Сохранение данных таймера при закрытии или обновлении страницы\n  window.onbeforeunload = function (e: any) {\n    localStorage.setItem(`timer${props.id}`, JSON.stringify(props.timer));\n  };\n\n  return (\n    <div className=\"Stopwatch\">\n      <div className=\"Stopwatch__content\">\n        <p className=\"Stopwatch__time\">{formatTime(props.timer)}</p>\n        <div className=\"buttons\">\n          {props.isPaused ? (\n            <img\n              className=\"Stopwatch__image\"\n              src={playIco}\n              alt=\"play ico\"\n              onClick={handleTimer}\n            />\n          ) : (\n            <img\n              className=\"Stopwatch__image\"\n              src={pauseIco}\n              alt=\"pause ico\"\n              onClick={handleTimer}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Stopwatch;\n","import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport Stopwatch from \"../Stopwatch/Stopwatch\";\nimport cardIco from \"../../img/card-text.svg\";\nimport { formatDate, formatSumm, formatTime } from \"../../utils/helpers\";\nimport \"./InProgressCard.scss\";\n\nfunction InProgressCard(props: {\n  task: string;\n  id: string;\n  resolveTask: (data: {\n    text: string;\n    id: string;\n    date: string;\n    timer: string;\n    summ: string;\n  }) => void;\n}) {\n  const timerData: string = localStorage.getItem(`timer${props.id}`)\n    ? localStorage.getItem(`timer${props.id}`) || \"\"\n    : \"\";\n\n  const [timer, setTimer] = useState(+timerData);\n\n  const [isPaused, setIsPaused] = useState(true);\n\n  //Завершить таск\n  const handleResolve = () => {\n    const date = new Date();\n    props.resolveTask({\n      text: props.task,\n      id: props.id,\n      date: formatDate(date),\n      timer: formatTime(timer),\n      summ: `${formatSumm(timer)} копеек`,\n    });\n    setIsPaused(true);\n  };\n\n  return (\n    <Card className=\"InProgressCard\">\n      <Card.Body className=\"InProgressCard__content d-flex p-2\">\n        <div className=\"d-flex\">\n          <img\n            className=\"InProgressCard__content-image mr-2\"\n            src={cardIco}\n            alt=\"card icon\"\n          />\n\n          <Card.Title className=\"InProgressCard__text text-secondary\">\n            {props.task}\n          </Card.Title>\n        </div>\n\n        <div className=\"InProgressCard__controls d-flex\">\n          <Stopwatch\n            id={props.id}\n            isPaused={isPaused}\n            setIsPaused={setIsPaused}\n            timer={timer}\n            setTimer={setTimer}\n          />\n          <Button\n            variant=\"success\"\n            className=\"InProgressCard__button\"\n            size=\"lg\"\n            onClick={handleResolve}\n          >\n            Resolve\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default InProgressCard;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport cardIco from \"../../img/card-text.svg\";\nimport \"./DoneCard.scss\";\n\nfunction DoneCard(props: { task: string; id: string; timer?: string; summ?: string }) {\n  return (\n    <Card className=\"DoneCard\">\n      <Card.Body className=\"DoneCard__content d-flex p-2\">\n        <div className=\"d-flex\">\n          <img\n            className=\"DoneCard__content-image mr-2\"\n            src={cardIco}\n            alt=\"card icon\"\n          />\n\n          <Card.Title className=\"DoneCard__text text-secondary\">\n            {props.task}\n          </Card.Title>\n        </div>\n        <div className=\"DoneCard__container d-flex\">\n          <div>\n            <p className=\"DoneCard__time\">{props.timer}</p>\n            <span className=\"DoneCard__summ\">\n              {`${props.summ}`}\n            </span>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default DoneCard;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./CommonButton.scss\";\n\nfunction CommonButton(props: { onClick: () => void; text: string}) {\n  return (\n    <Button\n      className=\"CommonButton\"\n      variant=\"outline-secondary\"\n      style={{ fontWeight: \"bolder\" }}\n      onClick={props.onClick}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        fill=\"currentColor\"\n        className=\"CommonButton__image bi bi-plus\"\n        viewBox=\"0 0 16 16\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n      >\n        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n      </svg>\n      {props.text}\n    </Button>\n  );\n}\n\nexport default CommonButton;\n","import React, { useState } from \"react\";\nimport { CardColumns, Card } from \"react-bootstrap\";\nimport AddTaskModal from \"../AddTaskModal/AddTaskModal\";\nimport GetTotalModal from \"../GetTotalModal/GetTotalModal\";\nimport ToDoCard from \"../ToDoCard/ToDoCard\";\nimport InProgressCard from \"../InProgressCard/InProgressCard\";\nimport DoneCard from \"../DoneCard/DoneCard\";\nimport CommonButton from \"../CommonButton/CommonButton\";\nimport { Task, TasksDataType, ModalType } from \"../../utils/types\";\nimport \"./Kanban.scss\";\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Kanban() {\n  const tasksData: TasksDataType = {\n    tasks: localStorage.getItem(\"tasks\")\n      ? JSON.parse(localStorage.getItem(\"tasks\") || \"\")\n      : [],\n    inProgress: localStorage.getItem(\"inProgress\")\n      ? JSON.parse(localStorage.getItem(\"inProgress\") || \"\")\n      : [],\n    done: localStorage.getItem(\"done\")\n      ? JSON.parse(localStorage.getItem(\"done\") || \"\")\n      : [],\n    closed: localStorage.getItem(\"closed\")\n      ? JSON.parse(localStorage.getItem(\"closed\") || \"\")\n      : [],\n  };\n\n  const [tasks, setTasks] = useState<TasksDataType>(tasksData);\n  const [modalType, setModalType] = useState<ModalType>();\n\n  //Добавление таска\n  const addTodo = async (data: Task) => {\n    await localStorage.setItem(\"tasks\", JSON.stringify([...tasks.tasks, data]));\n\n    setTasks({\n      ...tasksData,\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\n    });\n  };\n\n  //Удаление таска\n  const deleteTodo = async (id: string) => {\n    const newTodos = tasks.tasks.filter(\n      (todo: { id: string }) => todo.id !== id\n    );\n    await localStorage.setItem(\"tasks\", JSON.stringify(newTodos));\n\n    setTasks({\n      ...tasksData,\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\n    });\n  };\n\n  const deleteInProgress = async (id: string) => {\n    const newInProgress = tasks.inProgress.filter(\n      (task: { text: string; id: string }) => task.id !== id\n    );\n    await localStorage.setItem(\"inProgress\", JSON.stringify(newInProgress));\n\n    setTasks({\n      ...tasksData,\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\n    });\n  };\n\n  //Добавляем таски в inProgress\n  const addInProgress = async (data: Task) => {\n    deleteTodo(data.id);\n    await localStorage.setItem(\n      \"inProgress\",\n      JSON.stringify([...tasks.inProgress, data])\n    );\n\n    setTasks({\n      ...tasksData,\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\n    });\n  };\n\n  //Добавляем таски в done\n  const addDone = async (data: Task) => {\n    deleteInProgress(data.id);\n    await localStorage.setItem(\"done\", JSON.stringify([...tasks.done, data]));\n\n    setTasks({\n      ...tasksData,\n      tasks: JSON.parse(localStorage.getItem(\"tasks\") || \"\"),\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\n      done: JSON.parse(localStorage.getItem(\"done\") || \"\"),\n    });\n    localStorage.removeItem(`timer${data.id}`);\n  };\n\n  const getTotal = async () => {\n    await localStorage.setItem(\n      \"closed\",\n      JSON.stringify([...tasks.closed, ...tasks.done])\n    );\n    localStorage.removeItem(\"done\");\n    setTasks({\n      ...tasksData,\n      done: [],\n      closed: JSON.parse(localStorage.getItem(\"closed\") || \"\"),\n    });\n  };\n\n  //Собираем таски\n  const todoCards =\n    tasks.tasks &&\n    tasks.tasks.map((todo: Task) => {\n      return (\n        <ToDoCard\n          todo={todo.text}\n          id={todo.id}\n          key={todo.id}\n          startTask={addInProgress}\n        />\n      );\n    });\n\n  const inProgressCards =\n    tasks.inProgress &&\n    tasks.inProgress.map((task: Task) => {\n      return (\n        <InProgressCard\n          task={task.text}\n          id={task.id}\n          key={task.id}\n          resolveTask={addDone}\n        />\n      );\n    });\n\n  const doneCards =\n    tasks.done &&\n    tasks.done.map((task: Task) => {\n      return (\n        <DoneCard\n          task={task.text}\n          id={task.id}\n          timer={task.timer}\n          summ={task.summ}\n          key={task.id}\n        />\n      );\n    });\n\n  //Обработчики\n  const handleOpenModal = () => {\n    setModalType(\"total\");\n    getTotal();\n  };\n  const handleCloseModal = () => {\n    setModalType(undefined);\n  };\n\n  return (\n    <div className=\"Kanban\">\n      <AddTaskModal\n        onHide={handleCloseModal}\n        id={1}\n        addTask={addTodo}\n        modalType={modalType}\n      />\n\n      <GetTotalModal\n        onHide={handleCloseModal}\n        modalType={modalType}\n        closedTasks={tasks.closed}\n      />\n\n      <CardColumns className=\"Kanban__content p-3 d-flex\">\n        <Card className=\"Kanban__column\" bg=\"light\">\n          <Card.Body className=\"Kanban__column-content p-2 mb-3\">\n            <div className=\"Kanban__column-header d-flex\">\n              <span className=\"Kanban__counter\">\n                {tasks.tasks && tasks.tasks.length}\n              </span>\n              <Card.Title className=\"Kanban__content-title\">To do</Card.Title>\n            </div>\n\n            {todoCards}\n          </Card.Body>\n          <footer className=\"Kanban__column-footer\">\n            <CommonButton onClick={() => setModalType(\"add\")} text=\"New Task\" />\n          </footer>\n        </Card>\n\n        <Card className=\"Kanban__column\" bg=\"light\">\n          <Card.Body\n            className=\"Kanban__column-content p-2\"\n            style={{ height: \"100%\" }}\n          >\n            <div className=\"Kanban__column-header d-flex\">\n              <span className=\"Kanban__counter\">\n                {tasks.inProgress && tasks.inProgress.length}\n              </span>\n              <Card.Title className=\"Kanban__content-title\">\n                In progress\n              </Card.Title>\n            </div>\n            {inProgressCards}\n          </Card.Body>\n        </Card>\n\n        <Card className=\"Kanban__column\" bg=\"light\">\n          <Card.Body className=\"Kanban__column-content p-2 mb-3\">\n            <div className=\"Kanban__column-header d-flex\">\n              <span className=\"Kanban__counter\">\n                {tasks.done && tasks.done.length}\n              </span>\n              <Card.Title className=\"Kanban__content-title\">Done</Card.Title>\n            </div>\n            {doneCards}\n          </Card.Body>\n          <footer className=\"Kanban__column-footer\">\n            <CommonButton onClick={handleOpenModal} text=\"Get total\" />\n          </footer>\n        </Card>\n      </CardColumns>\n    </div>\n  );\n}\n\nexport default Kanban;\n","import \"./App.css\";\nimport Kanban from \"./сomponents/Kanban/Kanban\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Kanban/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}