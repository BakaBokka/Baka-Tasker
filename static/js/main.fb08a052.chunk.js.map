{"version":3,"sources":["utils/helpers.js","сomponents/AddTaskModal/AddTaskModal.tsx","img/card-text.svg","сomponents/ToDoCard/ToDoCard.tsx","img/play-fill.svg","img/pause-fill.svg","сomponents/Stopwatch/Stopwatch.tsx","сomponents/InProgressCard/InProgressCard.tsx","сomponents/DoneCard/DoneCard.tsx","сomponents/NewTaskButton/NewTaskButton.tsx","сomponents/Kanban/Kanban.tsx","App.js","reportWebVitals.js","index.js"],"names":["generateId","count","counter","AddTaskModal","props","useState","value","setValue","id","setId","useEffect","Modal","className","show","onHide","centered","autoFocus","Header","closeButton","Title","Body","Form","autoComplete","Group","controlId","Control","type","placeholder","onChange","e","target","Button","variant","onClick","preventDefault","addTask","text","handleClick","ToDoCard","Card","src","cardIco","alt","todo","size","startTask","Stopwatch","timerData","localStorage","getItem","timer","setTimer","increment","useRef","isPaused","current","setInterval","clearInterval","setItem","JSON","stringify","handleTimer","setIsPaused","window","onbeforeunload","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","formatTime","playIco","pauseIco","InProgressCard","task","resolveTask","DoneCard","summ","ceil","NewTaskButton","style","fontWeight","setShow","xmlns","width","height","fill","viewBox","stroke","strokeWidth","d","Kanban","tasksData","todos","parse","inProgress","done","tasks","setTasks","addTodo","data","a","deleteTodo","newTodos","filter","deleteInProgress","newInProgress","addInProgress","addDone","todoCards","map","inProgressCards","doneCards","CardColumns","bg","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb08a052.chunk.js","sourcesContent":["\n  //Генерация ключей и id для массива\n  const counter = () => {\n    let count = 1;\n    return function () {\n      return count++;\n    };\n  };\n  \n  export const generateId = counter();\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport {generateId} from \"../../utils/helpers\"\nimport \"./AddTaskModal.scss\";\n\nfunction AddTaskModal(props: {\n  onHide: () => void;\n  id: number;\n  show: boolean;\n  addTask: (data: {text: string, id: string}) => void;\n}) {\n  const [value, setValue] = useState<string>(\"\");\n  const [id, setId] = useState<number>(0)\n\n  useEffect(() => {\n    setId(generateId())\n  }, [value])\n\n  //Оброботка сабмита\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.addTask({text: value, id: id + value});\n    props.onHide();\n    setValue(\"\");\n  };\n\n  return (\n    <Modal\n      className=\"AddTaskModal\"\n      show={props.show}\n      onHide={props.onHide}\n      centered={true}\n      autoFocus\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>What's your new task?</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form className=\"AddTaskModal__form d-flex\" autoComplete=\"off\">\n          <Form.Group className=\"AddTaskModal__form-content\" controlId=\"form\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Type your task here\"\n              autoFocus\n              value={value}\n              onChange={(e: { target: { value: string } }) =>\n                setValue(e.target.value)\n              }\n            />\n          </Form.Group>\n\n          <Button\n            className=\"AddTaskModal__button\"\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={(e: React.MouseEvent) => handleClick(e)}\n          >\n            Add\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default AddTaskModal;\n","export default __webpack_public_path__ + \"static/media/card-text.21416c42.svg\";","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport cardIco from \"../../img/card-text.svg\";\nimport \"./ToDoCard.scss\";\n\nfunction ToDoCard(props: {\n  todo: string;\n  id: string;\n  startTask: (data: { text: string; id: string }) => void;\n}) {\n  //Принять таск\n  const handleStart = () => {\n    props.startTask({ text: props.todo, id: props.id });\n  };\n\n  \n\n  return (\n    <Card className=\"ToDoCard\" id={\"\" + props.id}>\n      <Card.Body className=\"ToDoCard__content d-flex p-2\">\n        <div className=\"d-flex\">\n          <img\n            className=\"ToDoCard__content-image mr-2\"\n            src={cardIco}\n            alt=\"card icon\"\n          />\n          <Card.Title className=\"ToDoCard__text text-secondary\">\n            {props.todo}\n          </Card.Title>\n        </div>\n        <Button\n          className=\"ToDoCard__button m-3\"\n          size=\"lg\"\n          id={\"\" + props.id}\n          onClick={handleStart}\n        >\n          Start\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ToDoCard;\n","export default __webpack_public_path__ + \"static/media/play-fill.446d2092.svg\";","export default __webpack_public_path__ + \"static/media/pause-fill.bba9440f.svg\";","import { useState, useRef, useEffect } from \"react\";\nimport playIco from \"../../img/play-fill.svg\";\nimport pauseIco from \"../../img/pause-fill.svg\";\nimport \"./Stopwatch.scss\";\n\nconst Stopwatch = (props: {\n  id: string;\n  isPaused: boolean;\n  setIsPaused: (isPaused: boolean) => void;\n}) => {\n  const timerData: string = localStorage.getItem(`timer${props.id}`)\n    ? localStorage.getItem(`timer${props.id}`) || \"\"\n    : \"\";\n  const [timer, setTimer] = useState(+timerData);\n\n  const increment: any = useRef();\n\n  useEffect(() => {\n    if (props.isPaused === false) {\n      increment.current = setInterval(() => {\n        setTimer((timer) => timer + 1);\n      }, 1000);\n    } else {\n      clearInterval(increment.current);\n\n      localStorage.setItem(`timer${props.id}`, JSON.stringify(timer));\n    }\n    // eslint-disable-next-line\n  }, [props.isPaused]);\n\n  //Запуск и остановка таймера\n  const handleTimer = () => {\n    props.setIsPaused(!props.isPaused);\n  };\n\n  //Сохранение данных таймера при закрытии или обновлении страницы\n  window.onbeforeunload = function (e: any) {\n    localStorage.setItem(`timer${props.id}`, JSON.stringify(timer));\n  };\n\n  //Форматер таймера\n  const formatTime = () => {\n    const getSeconds = `0${timer % 60}`.slice(-2);\n    const minutes = `${Math.floor(timer / 60)}`;\n    const getMinutes = `0${+minutes % 60}`.slice(-2);\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\n\n    return `${getHours} : ${getMinutes} : ${getSeconds}`;\n  };\n\n  return (\n    <div className=\"Stopwatch\">\n      <div className=\"Stopwatch__content\">\n        <p className=\"Stopwatch__time\">{formatTime()}</p>\n        <div className=\"buttons\">\n          {props.isPaused ? (\n            <img\n              className=\"Stopwatch__image\"\n              src={playIco}\n              alt=\"play ico\"\n              onClick={handleTimer}\n            />\n          ) : (\n            <img\n              className=\"Stopwatch__image\"\n              src={pauseIco}\n              alt=\"pause ico\"\n              onClick={handleTimer}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Stopwatch;\n","import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport Stopwatch from \"../Stopwatch/Stopwatch\";\nimport cardIco from \"../../img/card-text.svg\";\nimport \"./InProgressCard.scss\";\n\nfunction InProgressCard(props: {\n  task: string;\n  id: string;\n  resolveTask: (data: {text: string, id: string}) => void;\n}) {\n  const [isPaused, setIsPaused] = useState(true);\n\n  //Завершить таск\n  const handleResolve = () => {\n    props.resolveTask({text: props.task, id: props.id});\n    setIsPaused(true);\n  };\n\n  return (\n    <Card className=\"InProgressCard\">\n      <Card.Body className=\"InProgressCard__content d-flex p-2\">\n        <div className=\"InProgressCard__container d-flex\">\n          <div className=\"d-flex\">\n            <img\n              className=\"InProgressCard__content-image mr-2\"\n              src={cardIco}\n              alt=\"card icon\"\n            />\n\n            <Card.Title className=\"InProgressCard__text text-secondary\">{props.task}</Card.Title>\n          </div>\n          <Stopwatch\n            id={props.id}\n            isPaused={isPaused}\n            setIsPaused={setIsPaused}\n          />\n        </div>\n        <Button\n          variant=\"success\"\n          className=\"InProgressCard__button m-3\"\n          size=\"lg\"\n          onClick={handleResolve}\n        >\n          Resolve\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default InProgressCard;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport cardIco from \"../../img/card-text.svg\";\nimport \"./DoneCard.scss\";\n\nfunction DoneCard(props: { task: string; id: string }) {\n  const timerData: string = localStorage.getItem(`timer${props.id}`)\n    ? localStorage.getItem(`timer${props.id}`) || \"\"\n    : \"\";\n  const summ = `${Math.ceil(+timerData * 0.2777777777777778)} ₽`;\n\n  return (\n    <Card className=\"DoneCard\">\n      <Card.Body className=\"DoneCard__content d-flex p-2\">\n        <div className=\"DoneCard__container d-flex\">\n          <div className=\"d-flex\">\n            <img\n              className=\"DoneCard__content-image mr-2\"\n              src={cardIco}\n              alt=\"card icon\"\n            />\n\n            <Card.Title className=\"DoneCard__text text-secondary\">{props.task}</Card.Title>\n          </div>\n          <span className=\"DoneCard__summ\"> {summ} </span>\n\n        </div>\n\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default DoneCard;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./NewTaskButton.scss\";\n\nfunction NewTaskButton(props: { setShow: (show: boolean) => void }) {\n  return (\n    <Button\n      className=\"NewTaskButton\"\n      variant=\"outline-secondary\"\n      style={{ fontWeight: \"bolder\" }}\n      onClick={() => props.setShow(true)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        fill=\"currentColor\"\n        className=\"NewTaskButton__image bi bi-plus\"\n        viewBox=\"0 0 16 16\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n      >\n        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n      </svg>\n      New Task\n    </Button>\n  );\n}\n\nexport default NewTaskButton;\n","import React, { useState } from \"react\";\nimport { CardColumns, Card } from \"react-bootstrap\";\nimport AddTaskModal from \"../AddTaskModal/AddTaskModal\";\nimport ToDoCard from \"../ToDoCard/ToDoCard\";\nimport InProgressCard from \"../InProgressCard/InProgressCard\";\nimport DoneCard from \"../DoneCard/DoneCard\";\nimport NewTaskButton from \"../NewTaskButton/NewTaskButton\";\nimport { TasksDataType } from \"../../utils/types\";\nimport \"./Kanban.scss\";\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Kanban() {\n  const tasksData: TasksDataType = {\n    todos: localStorage.getItem(\"todos\")\n      ? JSON.parse(localStorage.getItem(\"todos\") || \"\")\n      : [],\n    inProgress: localStorage.getItem(\"inProgress\")\n      ? JSON.parse(localStorage.getItem(\"inProgress\") || \"\")\n      : [],\n    done: localStorage.getItem(\"done\")\n      ? JSON.parse(localStorage.getItem(\"done\") || \"\")\n      : [],\n  };\n\n  const [tasks, setTasks] = useState<TasksDataType>(tasksData);\n  const [show, setShow] = useState<boolean>(false);\n\n  //Добавление таска\n  const addTodo = async (data: { text: string; id: string }) => {\n    await localStorage.setItem(\"todos\", JSON.stringify([...tasks.todos, data]));\n\n    setTasks({\n      ...tasksData,\n      todos: JSON.parse(localStorage.getItem(\"todos\") || \"\"),\n    });\n  };\n\n  //Удаление таска\n  const deleteTodo = async (id: string) => {\n    const newTodos = tasks.todos.filter(\n      (todo: { id: string }) => todo.id !== id\n    );\n    await localStorage.setItem(\"todos\", JSON.stringify(newTodos));\n\n    setTasks({\n      ...tasksData,\n      todos: JSON.parse(localStorage.getItem(\"todos\") || \"\"),\n    });\n  };\n\n  const deleteInProgress = async (id: string) => {\n    const newInProgress = tasks.inProgress.filter(\n      (task: { text: string; id: string }) => task.id !== id\n    );\n    await localStorage.setItem(\"inProgress\", JSON.stringify(newInProgress));\n\n    setTasks({\n      ...tasksData,\n      todos: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\n    });\n  };\n\n  //Добавляем таски в inProgress\n  const addInProgress = async (data: { text: string; id: string }) => {\n    deleteTodo(data.id);\n    await localStorage.setItem(\n      \"inProgress\",\n      JSON.stringify([...tasks.inProgress, data])\n    );\n\n    setTasks({\n      ...tasksData,\n      todos: JSON.parse(localStorage.getItem(\"todos\") || \"\"),\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\n    });\n  };\n\n  //Добавляем таски в done\n  const addDone = async (data: { text: string; id: string }) => {\n    deleteInProgress(data.id);\n    await localStorage.setItem(\"done\", JSON.stringify([...tasks.done, data]));\n\n    setTasks({\n      ...tasksData,\n      todos: JSON.parse(localStorage.getItem(\"todos\") || \"\"),\n      inProgress: JSON.parse(localStorage.getItem(\"inProgress\") || \"\"),\n      done: JSON.parse(localStorage.getItem(\"done\") || \"\"),\n    });\n  };\n\n  //Собираем таски\n  const todoCards =\n    tasks.todos &&\n    tasks.todos.map((todo: { text: string; id: string }) => {\n      return (\n        <ToDoCard\n          todo={todo.text}\n          id={todo.id}\n          key={todo.id}\n          startTask={addInProgress}\n        />\n      );\n    });\n\n  const inProgressCards =\n    tasks.inProgress &&\n    tasks.inProgress.map((task: { text: string; id: string }) => {\n      return (\n        <InProgressCard\n          task={task.text}\n          id={task.id}\n          key={task.id}\n          resolveTask={addDone}\n        />\n      );\n    });\n\n  const doneCards =\n    tasks.done &&\n    tasks.done.map((task: { text: string; id: string }) => {\n      return <DoneCard task={task.text} id={task.id} key={task.id} />;\n    });\n\n  //Обработчики\n  const handleCloseModal = () => {\n    setShow(false);\n  };\n  const handleSubmit = (data: { text: string; id: string }) => {\n    addTodo(data);\n  };\n\n  return (\n    <div className=\"Kanban\">\n      <AddTaskModal\n        show={show}\n        onHide={handleCloseModal}\n        id={1}\n        addTask={handleSubmit}\n      />\n      <CardColumns className=\"Kanban__content p-3 d-flex\">\n        <Card className=\"Kanban__column\" bg=\"light\">\n          <Card.Body className=\"p-2 mb-3\">\n            <div className=\"Kanban__content-header d-flex\">\n              <span className=\"Kanban__counter\">\n                {tasks.todos && tasks.todos.length}\n              </span>\n              <Card.Title className=\"Kanban__content-title\">To do</Card.Title>\n            </div>\n\n            {todoCards}\n          </Card.Body>\n          <NewTaskButton setShow={setShow} />\n        </Card>\n\n        <Card className=\"Kanban__column\" bg=\"light\">\n          <Card.Body className=\"p-2\">\n            <div className=\"Kanban__content-header d-flex\">\n              <span className=\"Kanban__counter\">\n                {tasks.inProgress && tasks.inProgress.length}\n              </span>\n              <Card.Title className=\"Kanban__content-title\">\n                In progress\n              </Card.Title>\n            </div>\n            {inProgressCards}\n          </Card.Body>\n        </Card>\n\n        <Card className=\"Kanban__column\" bg=\"light\">\n          <Card.Body className=\"p-2\">\n            <div className=\"Kanban__content-header d-flex\">\n              <span className=\"Kanban__counter\">\n                {tasks.done && tasks.done.length}\n              </span>\n              <Card.Title className=\"Kanban__content-title\">Done</Card.Title>\n            </div>\n            {doneCards}\n          </Card.Body>\n        </Card>\n      </CardColumns>\n    </div>\n  );\n}\n\nexport default Kanban;\n","import \"./App.css\";\nimport Kanban from \"./сomponents/Kanban/Kanban\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Kanban/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}